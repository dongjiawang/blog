<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on 我的码</title><link>https://blog.dongjiawang.top/post/</link><description>Recent content in Posts on 我的码</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>dongjiawang</copyright><lastBuildDate>Wed, 17 Nov 2021 19:05:00 +0800</lastBuildDate><atom:link href="https://blog.dongjiawang.top/post/index.xml" rel="self" type="application/rss+xml"/><item><title>面试准备（一）</title><link>https://blog.dongjiawang.top/post/2021-11-17-%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87%E4%B8%80%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95%E9%97%AE%E9%A2%98/</link><pubDate>Wed, 17 Nov 2021 19:05:00 +0800</pubDate><guid>https://blog.dongjiawang.top/post/2021-11-17-%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87%E4%B8%80%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95%E9%97%AE%E9%A2%98/</guid><description>C 语言相关 static 有什么用途 在函数体内的 static 变量的作用范围为该函数体，该变量的内存只被分配一次，因此其值在下次调用时仍维持上次的值； 在模块内的 static 全局</description></item><item><title>Jenkins使用</title><link>https://blog.dongjiawang.top/post/2021-03-20-jenkins%E4%BD%BF%E7%94%A8/</link><pubDate>Sat, 20 Mar 2021 12:00:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2021-03-20-jenkins%E4%BD%BF%E7%94%A8/</guid><description>一、配置 Jenkins 1、安装 使用homebrew进行安装 1 brew install jenkins 安装后获得提示：Note: When using launchctl the port will be 8080 启动 jenkins 服务 1 brew services start jenkins 在浏览器中访问 jenkins http://localhost:8080 2、配</description></item><item><title>网页图片添加点击方法获取图片</title><link>https://blog.dongjiawang.top/post/2020-09-27-webview-clickedimage/</link><pubDate>Sun, 27 Sep 2020 17:00:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2020-09-27-webview-clickedimage/</guid><description>点击网页中到图片，获取到这张图片后进行放大展示到效果。 实现这个效果，首先需要点击图片的时候获取到图片的地址，如果网页中的js没有点击方法，就</description></item><item><title>WKProcesspool方式共享WKWebView的进程和cookie</title><link>https://blog.dongjiawang.top/post/2020-09-26-wkwebview-cookie/</link><pubDate>Sat, 26 Sep 2020 18:00:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2020-09-26-wkwebview-cookie/</guid><description>以前的时候总结过两次WKWebView的cookie使用方式 《WKWebView添加Cookie》 《WKWebView添加Cookie总结》</description></item><item><title>启动页白屏</title><link>https://blog.dongjiawang.top/post/2020-09-26-launchstoryboard/</link><pubDate>Sat, 26 Sep 2020 17:00:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2020-09-26-launchstoryboard/</guid><description>使用 storyboard作为启动页之后可能会出现加载图片失败的问题，也就是白屏。 第一种 一般的解决方法是把启动页用的图片从Image.xcas</description></item><item><title>录屏功能</title><link>https://blog.dongjiawang.top/post/2020-01-19-screenrecord/</link><pubDate>Sun, 19 Jan 2020 17:00:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2020-01-19-screenrecord/</guid><description>苹果提供了ReplayKit对屏幕进行录制，支持音频、视频，还可以对视频进行剪辑、分享。 需要引用头文件&amp;lt;ReplayKit/Repla</description></item><item><title>检测设备方向</title><link>https://blog.dongjiawang.top/post/2020-01-17-%E6%A3%80%E6%B5%8B%E8%AE%BE%E5%A4%87%E6%96%B9%E5%90%91/</link><pubDate>Fri, 17 Jan 2020 18:00:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2020-01-17-%E6%A3%80%E6%B5%8B%E8%AE%BE%E5%A4%87%E6%96%B9%E5%90%91/</guid><description>第一种 使用[UIApplication sharedApplication].statusBarOrientation获取 1 UIInterfaceOrientation orientation = [UIApplication sharedApplication].statusBarOrientation; 枚举结果</description></item><item><title>UIVideoEditorController的颜色</title><link>https://blog.dongjiawang.top/post/2019-12-09-uivideoeditorcontroller%E7%9A%84%E9%A2%9C%E8%89%B2/</link><pubDate>Mon, 09 Dec 2019 12:00:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2019-12-09-uivideoeditorcontroller%E7%9A%84%E9%A2%9C%E8%89%B2/</guid><description>这篇博客介绍了《UIVideoEditorController》的简单使用，但是系统的的颜色都是白色高斯模糊，放到一些APP的主题颜色中并不</description></item><item><title>UIVideoEditorController</title><link>https://blog.dongjiawang.top/post/2019-12-06-uivideoeditorcontroller/</link><pubDate>Fri, 06 Dec 2019 12:00:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2019-12-06-uivideoeditorcontroller/</guid><description>在使用UIImagePickerController拍摄视频的时候如果设置allowsEditing为YES，在拍摄完成后可以对视频进行裁剪</description></item><item><title>Cordova创建plugin</title><link>https://blog.dongjiawang.top/post/2019-11-08-cordova%E5%88%9B%E5%BB%BAplugin/</link><pubDate>Fri, 08 Nov 2019 12:00:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2019-11-08-cordova%E5%88%9B%E5%BB%BAplugin/</guid><description>创建plugin需要用到plugman这个工具，可以使用npm安装 1 npm install -g plugman 创建plugin模版 假设有一个名为CordovaDemo的工程，</description></item><item><title>Cordova中使用cocoapods管理iOS的第三方库</title><link>https://blog.dongjiawang.top/post/2019-10-30-cordova%E4%B8%AD%E4%BD%BF%E7%94%A8cocoapods%E7%AE%A1%E7%90%86ios%E7%9A%84%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/</link><pubDate>Wed, 30 Oct 2019 16:00:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2019-10-30-cordova%E4%B8%AD%E4%BD%BF%E7%94%A8cocoapods%E7%AE%A1%E7%90%86ios%E7%9A%84%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/</guid><description>Cordova 已经支持iOS的cocoapods管理第三方库。 如果自定义的plugin中使用了cocoapods管理的框架，可以在plugin.xml文</description></item><item><title>获取到的相册图片方向错误</title><link>https://blog.dongjiawang.top/post/2019-10-30-%E8%8E%B7%E5%8F%96%E5%88%B0%E7%9A%84%E7%9B%B8%E5%86%8C%E5%9B%BE%E7%89%87%E6%96%B9%E5%90%91%E9%94%99%E8%AF%AF/</link><pubDate>Wed, 30 Oct 2019 15:00:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2019-10-30-%E8%8E%B7%E5%8F%96%E5%88%B0%E7%9A%84%E7%9B%B8%E5%86%8C%E5%9B%BE%E7%89%87%E6%96%B9%E5%90%91%E9%94%99%E8%AF%AF/</guid><description>使用PhotoKit从相册中获取到的图片时，会出现有些图片直接放在UIImageView中去显示的话，图片是正常的，如果对图片进行编辑，就会</description></item><item><title>合成视频出现绿边</title><link>https://blog.dongjiawang.top/post/2019-09-19-%E5%90%88%E6%88%90%E8%A7%86%E9%A2%91%E5%87%BA%E7%8E%B0%E7%BB%BF%E8%BE%B9/</link><pubDate>Thu, 19 Sep 2019 23:00:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2019-09-19-%E5%90%88%E6%88%90%E8%A7%86%E9%A2%91%E5%87%BA%E7%8E%B0%E7%BB%BF%E8%BE%B9/</guid><description>iOS项目中涉及到了多张图片合成视频，合成出来的视频出现了绿边，这里就涉及到了视频尺寸的知识点。 一般的编/解码器都有16位对齐的处理，不足1</description></item><item><title>配置fastlane环境</title><link>https://blog.dongjiawang.top/post/2019-09-10-%E9%85%8D%E7%BD%AEfastlane%E7%8E%AF%E5%A2%83/</link><pubDate>Tue, 10 Sep 2019 11:00:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2019-09-10-%E9%85%8D%E7%BD%AEfastlane%E7%8E%AF%E5%A2%83/</guid><description>配合这篇文章使用《Fastlane自动化发布》 安装homebrew 链接。 安装Ruby 安装rvm： 1 2 3 4 $ curl -L https://get.rvm.io | bash -s stable $ source ~/.rvm/scripts/rvm # 命令终端lo</description></item><item><title>Flutter的BottomNavigationBar不显示的问题</title><link>https://blog.dongjiawang.top/post/2019-08-07-flutter%E7%9A%84bottomnavigationbar%E4%B8%8D%E6%98%BE%E7%A4%BA%E7%9A%84%E9%97%AE%E9%A2%98/</link><pubDate>Wed, 07 Aug 2019 14:00:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2019-08-07-flutter%E7%9A%84bottomnavigationbar%E4%B8%8D%E6%98%BE%E7%A4%BA%E7%9A%84%E9%97%AE%E9%A2%98/</guid><description>在学习Flutter开发的时候发现当设置BottomNavigationBar的数量超过3个后，底部的导航是白色，不仔细观察的话跟没有显示出</description></item><item><title>MJRefresh增加震动反馈</title><link>https://blog.dongjiawang.top/post/2019-08-05-mjrefresh%E5%A2%9E%E5%8A%A0%E9%9C%87%E5%8A%A8%E5%8F%8D%E9%A6%88/</link><pubDate>Mon, 05 Aug 2019 23:00:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2019-08-05-mjrefresh%E5%A2%9E%E5%8A%A0%E9%9C%87%E5%8A%A8%E5%8F%8D%E9%A6%88/</guid><description>发现有的app在下拉刷新的时候有一下震动反馈，感觉用户体验很棒，所以想在现有的项目中也增加一个这样的效果。但是项目中使用的 MJRefresh 并没有提供这样的</description></item><item><title>导入Xcode文件排序错乱的问题</title><link>https://blog.dongjiawang.top/post/2019-07-02-%E5%AF%BC%E5%85%A5xcode%E6%96%87%E4%BB%B6%E6%8E%92%E5%BA%8F%E9%94%99%E4%B9%B1%E7%9A%84%E9%97%AE%E9%A2%98/</link><pubDate>Tue, 02 Jul 2019 16:00:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2019-07-02-%E5%AF%BC%E5%85%A5xcode%E6%96%87%E4%BB%B6%E6%8E%92%E5%BA%8F%E9%94%99%E4%B9%B1%E7%9A%84%E9%97%AE%E9%A2%98/</guid><description>平时通过Xcode的File选项或者通过鼠标向Xcode的工程中添加文件时，文件目录的排序会变得错乱。 如图： 这时候可以使用Xcode的自带的</description></item><item><title>MapView使用Autolayout无法自动定位到用户位置</title><link>https://blog.dongjiawang.top/post/2019-06-26-mapview%E4%BD%BF%E7%94%A8autolayout%E6%97%A0%E6%B3%95%E8%87%AA%E5%8A%A8%E5%AE%9A%E4%BD%8D%E5%88%B0%E7%94%A8%E6%88%B7%E4%BD%8D%E7%BD%AE/</link><pubDate>Wed, 26 Jun 2019 12:00:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2019-06-26-mapview%E4%BD%BF%E7%94%A8autolayout%E6%97%A0%E6%B3%95%E8%87%AA%E5%8A%A8%E5%AE%9A%E4%BD%8D%E5%88%B0%E7%94%A8%E6%88%B7%E4%BD%8D%E7%BD%AE/</guid><description>一般在设置了MKMapView的frame的时候，会自动跳转到当前用户对位置进行显示。 有时候需要用的Masonry进行布局，这时候发现虽然已</description></item><item><title>iOS自定义字体</title><link>https://blog.dongjiawang.top/post/2019-06-18-ios%E8%87%AA%E5%AE%9A%E4%B9%89%E5%AD%97%E4%BD%93/</link><pubDate>Tue, 18 Jun 2019 12:00:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2019-06-18-ios%E8%87%AA%E5%AE%9A%E4%B9%89%E5%AD%97%E4%BD%93/</guid><description>将字体文件导入到工程中，并且在info.plist中添加关于font的配置。 在TARGETS -&amp;gt; Build Phases -&amp;gt; Copy Bundle Resources中添加引用。 字体的</description></item><item><title>命令行配置搬瓦工的SS</title><link>https://blog.dongjiawang.top/post/2019-06-10-%E5%91%BD%E4%BB%A4%E8%A1%8C%E9%85%8D%E7%BD%AE%E6%90%AC%E7%93%A6%E5%B7%A5%E7%9A%84ss/</link><pubDate>Mon, 10 Jun 2019 15:00:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2019-06-10-%E5%91%BD%E4%BB%A4%E8%A1%8C%E9%85%8D%E7%BD%AE%E6%90%AC%E7%93%A6%E5%B7%A5%E7%9A%84ss/</guid><description>原来的时候搬瓦工可以一键配置SS，参考这篇**《配置搬瓦工》** ，后来就没有这个选项了。 不过现在可以使用命令行安装配置。 最好是使用SSH连接</description></item><item><title>iOS进入后台的模糊效果</title><link>https://blog.dongjiawang.top/post/2019-06-05-ios%E8%BF%9B%E5%85%A5%E5%90%8E%E5%8F%B0%E7%9A%84%E6%A8%A1%E7%B3%8A%E6%95%88%E6%9E%9C/</link><pubDate>Wed, 05 Jun 2019 15:00:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2019-06-05-ios%E8%BF%9B%E5%85%A5%E5%90%8E%E5%8F%B0%E7%9A%84%E6%A8%A1%E7%B3%8A%E6%95%88%E6%9E%9C/</guid><description>1 2 // 定义遮盖view @property (strong, nonatomic)UIVisualEffectView *visualEffectView; 1 2 3 4 5 6 7 8 - (UIVisualEffectView *)visualEffectView{ if (!_visualEffectView) { UIBlurEffect *blurEffect = [UIBlurEffect effectWithStyle:UIBlurEffectStyleLight]; _visualEffectView = [[UIVisualEffectView alloc] initWithEffect:blurEffect]; _visualEffectView.frame = [UIScreen mainScreen].bounds; } return _visualEffectView; } 监听app状态 1 2 3 - (void)applicationWillResignActive:(UIApplication *)application { [[UIApplication sharedApplication].keyWindow addSubview:self.visualEffectView]; } 1 2 3 4 5</description></item><item><title>iOS检测是否越狱</title><link>https://blog.dongjiawang.top/post/2019-06-04-ios%E6%A3%80%E6%B5%8B%E6%98%AF%E5%90%A6%E8%B6%8A%E7%8B%B1/</link><pubDate>Tue, 04 Jun 2019 22:00:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2019-06-04-ios%E6%A3%80%E6%B5%8B%E6%98%AF%E5%90%A6%E8%B6%8A%E7%8B%B1/</guid><description>第一种 遍历文件目录，查看是否可以获取越狱后的文件 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 BOOL root = NO; NSFileManager *fileManager=[NSFileManager defaultManager]; NSArray *pathArray = @[@&amp;#34;/etc/ssh/sshd_config&amp;#34;, @&amp;#34;/usr/libexec/ssh-keysign&amp;#34;, @&amp;#34;/usr/sbin/sshd&amp;#34;, @&amp;#34;/usr/sbin/sshd&amp;#34;, @&amp;#34;/bin/sh&amp;#34;, @&amp;#34;/bin/bash&amp;#34;, @&amp;#34;/etc/apt&amp;#34;, @&amp;#34;/Application/Cydia.app/&amp;#34;, @&amp;#34;/Library/MobileSubstrate/MobileSubstrate.dylib&amp;#34; ]; for (NSString *path in pathArray) { root</description></item><item><title>检测私有API的使用</title><link>https://blog.dongjiawang.top/post/2019-01-22-%E6%A3%80%E6%B5%8B%E7%A7%81%E6%9C%89api%E7%9A%84%E4%BD%BF%E7%94%A8/</link><pubDate>Tue, 22 Jan 2019 17:00:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2019-01-22-%E6%A3%80%E6%B5%8B%E7%A7%81%E6%9C%89api%E7%9A%84%E4%BD%BF%E7%94%A8/</guid><description>1、使用string命令获取使用的api列表 先archive出来一个可提交审核的ipa包。 将后缀改为zip,解压，得到Payload文件夹。</description></item><item><title>UITableView的索引</title><link>https://blog.dongjiawang.top/post/2018-12-31-uitableview%E7%9A%84%E7%B4%A2%E5%BC%95/</link><pubDate>Mon, 31 Dec 2018 22:00:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2018-12-31-uitableview%E7%9A%84%E7%B4%A2%E5%BC%95/</guid><description>苹果提供了UILocalizedIndexedCollation来配合UITableView进行索引管理。 UILocalizedIndexe</description></item><item><title>UICollectionViewCell的Label点击文字颜色</title><link>https://blog.dongjiawang.top/post/2018-12-30-uicollectionviewcell%E7%9A%84label%E7%82%B9%E5%87%BB%E6%96%87%E5%AD%97%E9%A2%9C%E8%89%B2/</link><pubDate>Sun, 30 Dec 2018 19:40:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2018-12-30-uicollectionviewcell%E7%9A%84label%E7%82%B9%E5%87%BB%E6%96%87%E5%AD%97%E9%A2%9C%E8%89%B2/</guid><description>在做有UICollectionViewCell的界面，cell上有一个UILabel，需要在选中cell的时候改变label的文字颜色。 在c</description></item><item><title>添加和获取app的编译时间</title><link>https://blog.dongjiawang.top/post/2018-12-26-%E6%B7%BB%E5%8A%A0%E5%92%8C%E8%8E%B7%E5%8F%96app%E7%9A%84%E7%BC%96%E8%AF%91%E6%97%B6%E9%97%B4/</link><pubDate>Wed, 26 Dec 2018 17:40:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2018-12-26-%E6%B7%BB%E5%8A%A0%E5%92%8C%E8%8E%B7%E5%8F%96app%E7%9A%84%E7%BC%96%E8%AF%91%E6%97%B6%E9%97%B4/</guid><description>最近做的app有个关于我们界面，其中有一项就是显示app的更新日期，由于这个界面隐藏的比较深，有时发新版的时候忽略修改编译的日期，所以就想着</description></item><item><title>获取APP的图标和启动图</title><link>https://blog.dongjiawang.top/post/2018-12-26-%E8%8E%B7%E5%8F%96app%E7%9A%84%E5%9B%BE%E6%A0%87%E5%92%8C%E5%90%AF%E5%8A%A8%E5%9B%BE/</link><pubDate>Wed, 26 Dec 2018 17:40:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2018-12-26-%E8%8E%B7%E5%8F%96app%E7%9A%84%E5%9B%BE%E6%A0%87%E5%92%8C%E5%90%AF%E5%8A%A8%E5%9B%BE/</guid><description>公司的app又新的需求，在某些地方会用到app的图标和启动图，但是图标和启动图放在系统的文件夹里，获取这些图标的方式和一般加载资源的方式不一</description></item><item><title>loaded the "XXXView" nib but the view outlet was not set</title><link>https://blog.dongjiawang.top/post/2018-11-30-loaded-the-xxxviewnib-but-the-view-outlet-was-not-set/</link><pubDate>Fri, 30 Nov 2018 10:00:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2018-11-30-loaded-the-xxxviewnib-but-the-view-outlet-was-not-set/</guid><description>关于[UIViewController _loadViewFromNibNamed:bundle:] loaded the &amp;quot;XXXView&amp;quot; nib but the view outlet was not set这个错误的原因，一般分为两种情况： 第一种 当控制器的view是通过xib加载</description></item><item><title>iOS混淆（二）</title><link>https://blog.dongjiawang.top/post/2018-11-25-ios%E6%B7%B7%E6%B7%86%E4%BA%8C/</link><pubDate>Sun, 25 Nov 2018 01:10:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2018-11-25-ios%E6%B7%B7%E6%B7%86%E4%BA%8C/</guid><description>前两天做项目混淆的时候已经使用了一个开源的框架，今天在github上又发现了一个，只是我还没有亲自去体验，在这里记录一下吧。 上次的博客，可以</description></item><item><title>自定义cordova插件</title><link>https://blog.dongjiawang.top/post/2018-11-23-%E8%87%AA%E5%AE%9A%E4%B9%89cordova%E6%8F%92%E4%BB%B6/</link><pubDate>Fri, 23 Nov 2018 12:00:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2018-11-23-%E8%87%AA%E5%AE%9A%E4%B9%89cordova%E6%8F%92%E4%BB%B6/</guid><description>cordova可以通过自定义插件的形式，通过js调用原生的功能。 打开webview的Plugin 创建 创建一个继承 CDVPlugin的类， 头文</description></item><item><title>iOS项目中集成Cordova</title><link>https://blog.dongjiawang.top/post/2018-11-22-ios%E9%A1%B9%E7%9B%AE%E4%B8%AD%E9%9B%86%E6%88%90cordova/</link><pubDate>Thu, 22 Nov 2018 18:00:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2018-11-22-ios%E9%A1%B9%E7%9B%AE%E4%B8%AD%E9%9B%86%E6%88%90cordova/</guid><description>公司想要在已有的APP中集成一个页面，准备使用Cordova。 关于Cordova的介绍可以看他们官方文档 https://cordova.apache.org/docs/zh-cn/8.x/guide/platforms/ios/index.html 安装Cordova 安装Node.j</description></item><item><title>iOS混淆</title><link>https://blog.dongjiawang.top/post/2018-11-19-ios%E6%B7%B7%E6%B7%86/</link><pubDate>Mon, 19 Nov 2018 17:40:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2018-11-19-ios%E6%B7%B7%E6%B7%86/</guid><description>最近因为业务需求，需要做代码的混淆，找了许多教程和资料，最终发现一个很好的框架可以混淆OC的代码。 STCObfuscator 可以全局自动化混淆，并且支持cocoap</description></item><item><title>使用workspace管理多个project</title><link>https://blog.dongjiawang.top/post/2018-11-17-%E4%BD%BF%E7%94%A8workspace%E7%AE%A1%E7%90%86%E5%A4%9A%E4%B8%AAproject/</link><pubDate>Sat, 17 Nov 2018 23:00:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2018-11-17-%E4%BD%BF%E7%94%A8workspace%E7%AE%A1%E7%90%86%E5%A4%9A%E4%B8%AAproject/</guid><description>Xcode可以使用workspace同时存在和管理多个project，也就是一个项目中同时存在多个xcodeproj。 如图： 创建worksp</description></item><item><title>使用TFHpple解析HTML</title><link>https://blog.dongjiawang.top/post/2018-10-27-%E4%BD%BF%E7%94%A8tfhpple%E8%A7%A3%E6%9E%90html/</link><pubDate>Sat, 27 Oct 2018 17:40:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2018-10-27-%E4%BD%BF%E7%94%A8tfhpple%E8%A7%A3%E6%9E%90html/</guid><description>这篇文章是对《修改HTML富文本中的图片的大小》的补充。 可能是我们的后台传过来的HTML字符串有不规范的地方，当有多张图片的时候，上面文章的</description></item><item><title>优化tableview加载网络图片</title><link>https://blog.dongjiawang.top/post/2018-09-24-%E4%BC%98%E5%8C%96tableview%E5%8A%A0%E8%BD%BD%E7%BD%91%E7%BB%9C%E5%9B%BE%E7%89%87/</link><pubDate>Mon, 24 Sep 2018 21:40:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2018-09-24-%E4%BC%98%E5%8C%96tableview%E5%8A%A0%E8%BD%BD%E7%BD%91%E7%BB%9C%E5%9B%BE%E7%89%87/</guid><description>最近在优化公司的TableView的代码，有个界面需要加载一个在线的图片列表，在快速滑动的时候，会异步下载多个图片，容易造成内存警告，于是</description></item><item><title>后台播放音频和锁频显示音频</title><link>https://blog.dongjiawang.top/post/2018-09-05-%E5%90%8E%E5%8F%B0%E6%92%AD%E6%94%BE%E9%9F%B3%E9%A2%91%E5%92%8C%E9%94%81%E9%A2%91%E6%98%BE%E7%A4%BA%E9%9F%B3%E9%A2%91/</link><pubDate>Wed, 05 Sep 2018 12:00:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2018-09-05-%E5%90%8E%E5%8F%B0%E6%92%AD%E6%94%BE%E9%9F%B3%E9%A2%91%E5%92%8C%E9%94%81%E9%A2%91%E6%98%BE%E7%A4%BA%E9%9F%B3%E9%A2%91/</guid><description>播放音频也可以使用AVPlayer，因为音频没有画面，所以就不要创建AVPlayerLayer，只需要一个avplayer就可以完成播放的事</description></item><item><title>使用自定义UISlider制作音频播放进度条</title><link>https://blog.dongjiawang.top/post/2018-09-04-%E4%BD%BF%E7%94%A8%E8%87%AA%E5%AE%9A%E4%B9%89uislider%E5%88%B6%E4%BD%9C%E9%9F%B3%E9%A2%91%E6%92%AD%E6%94%BE%E8%BF%9B%E5%BA%A6%E6%9D%A1/</link><pubDate>Tue, 04 Sep 2018 12:00:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2018-09-04-%E4%BD%BF%E7%94%A8%E8%87%AA%E5%AE%9A%E4%B9%89uislider%E5%88%B6%E4%BD%9C%E9%9F%B3%E9%A2%91%E6%92%AD%E6%94%BE%E8%BF%9B%E5%BA%A6%E6%9D%A1/</guid><description>在项目的需求中需要自定义一个音频播放器的进度条，于是就想到了使用UISlider,但是系统默认的样式无法满足需求，需要进行一些修改。 创建一个</description></item><item><title>UITextView富文本超链接点击</title><link>https://blog.dongjiawang.top/post/2018-09-03-uitextview%E5%AF%8C%E6%96%87%E6%9C%AC%E8%B6%85%E9%93%BE%E6%8E%A5%E7%82%B9%E5%87%BB/</link><pubDate>Mon, 03 Sep 2018 18:40:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2018-09-03-uitextview%E5%AF%8C%E6%96%87%E6%9C%AC%E8%B6%85%E9%93%BE%E6%8E%A5%E7%82%B9%E5%87%BB/</guid><description>用UITextView显示富文本的时候，如果富文本中有超链接，有时候需要单独处理这个链接的点击。 可以继承UITextView重写hitTes</description></item><item><title>修改HTML富文本中的图片的大小</title><link>https://blog.dongjiawang.top/post/2018-09-01-%E4%BF%AE%E6%94%B9html%E5%AF%8C%E6%96%87%E6%9C%AC%E4%B8%AD%E7%9A%84%E5%9B%BE%E7%89%87%E7%9A%84%E5%A4%A7%E5%B0%8F/</link><pubDate>Sat, 01 Sep 2018 18:40:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2018-09-01-%E4%BF%AE%E6%94%B9html%E5%AF%8C%E6%96%87%E6%9C%AC%E4%B8%AD%E7%9A%84%E5%9B%BE%E7%89%87%E7%9A%84%E5%A4%A7%E5%B0%8F/</guid><description>使用 UITextView或者UILabel显示HTML 的时候，如果其中有图片，但是图片大小并不是想要的大小，就需要过滤其中的图片资源，并修改</description></item><item><title>将GitBook转成PDF或者EPUB格式电子书</title><link>https://blog.dongjiawang.top/post/2018-09-01-%E5%B0%86gitbook%E8%BD%AC%E6%88%90pdf%E6%88%96%E8%80%85epub%E6%A0%BC%E5%BC%8F%E7%94%B5%E5%AD%90%E4%B9%A6/</link><pubDate>Sat, 01 Sep 2018 17:40:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2018-09-01-%E5%B0%86gitbook%E8%BD%AC%E6%88%90pdf%E6%88%96%E8%80%85epub%E6%A0%BC%E5%BC%8F%E7%94%B5%E5%AD%90%E4%B9%A6/</guid><description>GitBook 是一个基于Node.js的命令行工具，可以使用Markdown来制作电子书，并利用Git/Github发布。 支持输出静态站点、PDF、eB</description></item><item><title>强制打开HTTPS证书无效的网址</title><link>https://blog.dongjiawang.top/post/2018-08-22-%E5%BC%BA%E5%88%B6%E6%89%93%E5%BC%80https%E8%AF%81%E4%B9%A6%E6%97%A0%E6%95%88%E7%9A%84%E7%BD%91%E5%9D%80/</link><pubDate>Wed, 22 Aug 2018 12:00:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2018-08-22-%E5%BC%BA%E5%88%B6%E6%89%93%E5%BC%80https%E8%AF%81%E4%B9%A6%E6%97%A0%E6%95%88%E7%9A%84%E7%BD%91%E5%9D%80/</guid><description>有时候一些特定的网页是使用HTTPS的，但是有可能HTTPS证书过期失效，这时候如果直接使用web打开，就会报错。 Error Domain=NSURLErrorDomain Code=-1202 &amp;ldquo;The certificate for this server is invalid. 可以在</description></item><item><title>iOS应用跳转到设置页面</title><link>https://blog.dongjiawang.top/post/2018-08-12-ios%E5%BA%94%E7%94%A8%E8%B7%B3%E8%BD%AC%E5%88%B0%E8%AE%BE%E7%BD%AE%E9%A1%B5%E9%9D%A2/</link><pubDate>Sun, 12 Aug 2018 22:00:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2018-08-12-ios%E5%BA%94%E7%94%A8%E8%B7%B3%E8%BD%AC%E5%88%B0%E8%AE%BE%E7%BD%AE%E9%A1%B5%E9%9D%A2/</guid><description>很多时候需要用户到系统设置页面去打开使用权限，需要在URL type中添加 Prefs值 注意 Prefs首字母大写 跳转方式 例如跳转到隐私-&amp;gt;</description></item><item><title>AVPlayer无缝切换源</title><link>https://blog.dongjiawang.top/post/2018-08-02-avplayer%E6%97%A0%E7%BC%9D%E5%88%87%E6%8D%A2%E6%BA%90/</link><pubDate>Thu, 02 Aug 2018 12:00:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2018-08-02-avplayer%E6%97%A0%E7%BC%9D%E5%88%87%E6%8D%A2%E6%BA%90/</guid><description>很多时候播放视频都有视频清晰度的需求，用户自己选择想要观看的分辨率. 一般切换清晰度就是切换NSURL，需要重新加载视频，如果不做处理就会出现</description></item><item><title>UITextView显示HTML</title><link>https://blog.dongjiawang.top/post/2018-07-26-uitextview%E6%98%BE%E7%A4%BAhtml/</link><pubDate>Thu, 26 Jul 2018 17:00:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2018-07-26-uitextview%E6%98%BE%E7%A4%BAhtml/</guid><description>有时候需要显示一串HTML的字符串，用UILabel UITextView的attributedText 属性都可以展示，但是如果HTML中有链</description></item><item><title>使用原生API扫描二维码设置扫描区域</title><link>https://blog.dongjiawang.top/post/2018-07-26-%E4%BD%BF%E7%94%A8%E5%8E%9F%E7%94%9Fapi%E6%89%AB%E6%8F%8F%E4%BA%8C%E7%BB%B4%E7%A0%81%E8%AE%BE%E7%BD%AE%E6%89%AB%E6%8F%8F%E5%8C%BA%E5%9F%9F/</link><pubDate>Thu, 26 Jul 2018 15:20:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2018-07-26-%E4%BD%BF%E7%94%A8%E5%8E%9F%E7%94%9Fapi%E6%89%AB%E6%8F%8F%E4%BA%8C%E7%BB%B4%E7%A0%81%E8%AE%BE%E7%BD%AE%E6%89%AB%E6%8F%8F%E5%8C%BA%E5%9F%9F/</guid><description>使用原生API扫描二维码 在上面的文章中说的关于设置扫描区域，当时写的是手动计算的区域设置的 其实AVCaptureVideoPreviewLa</description></item><item><title>UITextView自动滚动到底部</title><link>https://blog.dongjiawang.top/post/2018-07-11-uitextview%E8%87%AA%E5%8A%A8%E5%88%B0%E5%BA%95%E9%83%A8/</link><pubDate>Wed, 11 Jul 2018 16:40:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2018-07-11-uitextview%E8%87%AA%E5%8A%A8%E5%88%B0%E5%BA%95%E9%83%A8/</guid><description>给UITextView设置文字的时候，文字很长的话，默认是显示第一行。如果需要显示最后一行，需要手动设置textView滚动到最后。 首先设置</description></item><item><title>WKWebView添加Cookie总结</title><link>https://blog.dongjiawang.top/post/2018-07-09-wkwebview-cookie-add/</link><pubDate>Mon, 09 Jul 2018 17:40:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2018-07-09-wkwebview-cookie-add/</guid><description>WKWebView是苹果在iOS8 开始推出的webView组件，用来替代UIWebView内存占用高的问题，虽然WKWebView的性能提升</description></item><item><title>UITextField的placeholder自定义</title><link>https://blog.dongjiawang.top/post/2017-12-17-textfield-plceholder/</link><pubDate>Sun, 17 Dec 2017 12:00:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2017-12-17-textfield-plceholder/</guid><description>系统的 UITextField 的 placeholder，一般只有默认的样式，但是 UI 设计的时候往往会出现占位文字颜色，位置的等等不同的需求，那么就要修改 placeholder 的样式了。</description></item><item><title>点击Cell时自定义控件背景色消失的问题</title><link>https://blog.dongjiawang.top/post/2017-12-12-uitablviewcell-disappperbackcolor/</link><pubDate>Tue, 12 Dec 2017 12:00:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2017-12-12-uitablviewcell-disappperbackcolor/</guid><description>在 UITableVIewCell 上添加的 UIView，并设置了背景色，然后点击 cell 的时候，因为 cell 的 selectionStyle 的原因，这个自定义的 UIView 的背景色被设置成了 [r:0 b:0 g:0 a:0]。 是因为选择 cell 的</description></item><item><title>自定义 UITableView 侧滑菜单</title><link>https://blog.dongjiawang.top/post/2017-12-12-uitableview-editactions/</link><pubDate>Tue, 12 Dec 2017 11:30:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2017-12-12-uitableview-editactions/</guid><description>之前写过一篇 UITableView侧滑删除 ，这个只是添加一个删除功能，但是现在很多需求就是侧滑出来一个编辑菜单，于是就需要用另一种方式添加侧</description></item><item><title>封装常用的 Runtime 方法</title><link>https://blog.dongjiawang.top/post/2017-12-01-custom-rumtimekit/</link><pubDate>Fri, 01 Dec 2017 22:30:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2017-12-01-custom-rumtimekit/</guid><description>可以下载我写好的代码 RuntimeKit 1 2 3 4 5 6 7 8 9 10 /** 获取类名 @param class 类 @return 类名 */ + (NSString *)fetchClassName:(Class)class { const char *className = class_getName(class); return [NSString stringWithUTF8String:className]; } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 /**</description></item><item><title>CoreAnimation 的简单使用</title><link>https://blog.dongjiawang.top/post/2017-11-30-coreanimation-used/</link><pubDate>Thu, 30 Nov 2017 23:00:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2017-11-30-coreanimation-used/</guid><description>CoreAnimation 的执行过程是在后台操作的，不会阻塞主线程。 CoreAnimation 是作用在 CALayer 上，不会修改 UIView。 核心动画与UIView动画的区别 核心动画的一切都是假象，并</description></item><item><title>UIView 的 layer</title><link>https://blog.dongjiawang.top/post/2017-11-29-uiview-layer/</link><pubDate>Wed, 29 Nov 2017 23:30:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2017-11-29-uiview-layer/</guid><description>iOS 中能看得见的控件基本都是 UIView，比如按钮、文本、输入框、图片等等。 UIView 之所以能显示在屏幕上，因为它内部有一个图层：CALayer 1 @property(nonatomic,readonly,retain) CALayer</description></item><item><title>UIWebView简单的获取HTML内容和修改页面信息</title><link>https://blog.dongjiawang.top/post/2017-11-28-uiwebview-gethtml/</link><pubDate>Tue, 28 Nov 2017 22:00:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2017-11-28-uiwebview-gethtml/</guid><description>通过 stringByEvaluatingJavaScriptFromString 这个方法我们可以在iOS中与UIWebView中的网页元素交互。 使用stringByEvaluatingJavaScriptFromS</description></item><item><title>NSString使用stringWithFormat拼接</title><link>https://blog.dongjiawang.top/post/2017-11-27-nsstring-stringwithformat/</link><pubDate>Mon, 27 Nov 2017 12:30:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2017-11-27-nsstring-stringwithformat/</guid><description>字符串中有特殊符号 ” 1 2 3 4 5 NSInteger count = 50; //&amp;#34;是一个特殊符号, 如果在NSString中用到&amp;#34;需要用\进行转义 NSString *string = [NSString stringWithFormat:@&amp;#34;%zd\&amp;#34;&amp;#34;,count]; //输出</description></item><item><title>搭建本地 nginx 推流服务器</title><link>https://blog.dongjiawang.top/post/2017-11-26-nginx-init/</link><pubDate>Sun, 26 Nov 2017 14:30:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2017-11-26-nginx-init/</guid><description>安装nginx+rtmp 使用 homebrew 安装，先 clone nginx 到本地 1 brew tap homebrew/nginx 执行安装命令 1 brew install nginx-full --with-rtmp-module 安装完成后使用 nginx 命令，检查是否安装成功 1 nginx 在浏览器里打开htt</description></item><item><title>自定义 Tabbar 控制器中间按钮</title><link>https://blog.dongjiawang.top/post/2017-11-25-custom-maintabbar/</link><pubDate>Sat, 25 Nov 2017 09:30:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2017-11-25-custom-maintabbar/</guid><description>自定义主控制器 自定义 MainTabBarViewController 继承于 UITabBarController。 这个控制器引用 UITabBarControllerDelegate,通过这</description></item><item><title>手动屏幕旋转</title><link>https://blog.dongjiawang.top/post/2017-11-24-interfaceorientation/</link><pubDate>Fri, 24 Nov 2017 09:30:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2017-11-24-interfaceorientation/</guid><description>做 APP 的时候大部分界面是不支持屏幕旋转的，一般在做视频播放的时候，会要求手动全屏播放，这时候就需要用到旋转屏幕方向的操作，我在代码中式这样实现</description></item><item><title>NSString 去除空格</title><link>https://blog.dongjiawang.top/post/2017-11-23-nsstring-whitespacecharacterset/</link><pubDate>Thu, 23 Nov 2017 09:30:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2017-11-23-nsstring-whitespacecharacterset/</guid><description>NSString 去掉两边空格 1 NSString *utlStr = [urlString stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceCharacterSet]]; 去掉 NSString 中的空格 1 NSString *utlStr = [urlString stringByReplacingOccurrencesOfString:@&amp;#34; &amp;#34; withString:@&amp;#34;&amp;#34;];</description></item><item><title>判断 iOS 设备</title><link>https://blog.dongjiawang.top/post/2017-11-22-ios-utsname/</link><pubDate>Wed, 22 Nov 2017 17:10:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2017-11-22-ios-utsname/</guid><description>需要引用头文件 1 #import &amp;lt;sys/utsname.h&amp;gt; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60</description></item><item><title>获取相册视频并保存到指定路径</title><link>https://blog.dongjiawang.top/post/2017-11-20-photos-video-save/</link><pubDate>Mon, 20 Nov 2017 17:40:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2017-11-20-photos-video-save/</guid><description>需要用到两个系统框架 Photos/Photos.h 用来获取系统的相册信息 AVFoundation/AVFoundation.h 用来获取视频信息 首先获取相册中的所有视频 1 2 3 4 5 6 7 8 9 10 11 NSMutableArray *videoArray = [NSMutableArray array]; PHFetchOptions *option = [[PHFetchOptions alloc] init]; option.sortDescriptors = @[[NSSortDescriptor sortDescriptorWithKey:@&amp;#34;creationDate&amp;#34; ascending:NO]];</description></item><item><title>用 gulp 优化 Hexo</title><link>https://blog.dongjiawang.top/post/2017-10-30-gulp-optimize-hexo/</link><pubDate>Mon, 30 Oct 2017 22:30:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2017-10-30-gulp-optimize-hexo/</guid><description>在 Github 上搭建的 Hexo 博客，经常因为网络的问题加载缓慢，于是用 gulp 压缩静态文件。 安装 gulp 使用 npm install xxx --save 命令分别安装如下工具 1 2 3 4 5 6 7 &amp;#34;gulp&amp;#34;: &amp;#34;^3.9.1&amp;#34;, &amp;#34;gulp-htmlclean&amp;#34;: &amp;#34;^2.7.6&amp;#34;, &amp;#34;gulp-htmlmin&amp;#34;: &amp;#34;^1.3.0&amp;#34;, &amp;#34;gulp-imagemin&amp;#34;: &amp;#34;^2.4.0&amp;#34;, &amp;#34;gulp-minify-css&amp;#34;:</description></item><item><title>SourceTree 每次都需要输入密码的问题</title><link>https://blog.dongjiawang.top/post/2017-10-28-sourcetree-pwd/</link><pubDate>Sat, 28 Oct 2017 21:30:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2017-10-28-sourcetree-pwd/</guid><description>使用 sourceTree 的时候每次 pull 和 push 代码都得输入一次密码才能操作。 在本地的 ssh 文件中添加上 ssh 信息也不行。 找到了一个解决方法，在 SourceTree -&amp;gt; Preferences -&amp;gt; Git 中设置为 Use System Git，</description></item><item><title>配置搬瓦工</title><link>https://blog.dongjiawang.top/post/2017-10-27-bandwagon-config/</link><pubDate>Fri, 27 Oct 2017 17:30:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2017-10-27-bandwagon-config/</guid><description>新买了一个 搬瓦工vps， 练习了下配置流程，在这里记录一下 打开 vps 的控制界面，现在 stop 服务器，安装CentOS 6+的系统，我这里打开的时候已经是默</description></item><item><title>绘制 UIView 指定的边框</title><link>https://blog.dongjiawang.top/post/2017-10-23-uiview-custom-layer/</link><pubDate>Mon, 23 Oct 2017 12:30:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2017-10-23-uiview-custom-layer/</guid><description>一般绘制 UIView 的的边框的时候我们都会用 layer 的 borderWidth 和 borderColor 这两个属性，但是这样出来的效果是四周的边框都会被画上线条，有事需求就是指定画某个边框或者不画某个</description></item><item><title>cocoaPods-library not found for - {}</title><link>https://blog.dongjiawang.top/post/2017-10-01-cocoapods-library-not-found-for-/</link><pubDate>Sun, 01 Oct 2017 16:05:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2017-10-01-cocoapods-library-not-found-for-/</guid><description>更换电脑后 check out 项目后，发现运行不起来了 Debug 的时候提示 ld: library not found for - AFNetWorking， Release的时候没问题，仔细寻找后，发现所有的第</description></item><item><title>switch case 的 expected expression</title><link>https://blog.dongjiawang.top/post/2017-09-30-switchcase-expectedexpression/</link><pubDate>Sat, 30 Sep 2017 11:05:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2017-09-30-switchcase-expectedexpression/</guid><description>Objective-c 在使用复杂的 switch case 时候，如果在 case 内定义新的变量，就会报 expected expression 的错误，解决这种情况有两种方式。 1、将变量定义在 switch 外面 2、在 case 内使用 { } 把对应的代</description></item><item><title>使用通知消息监听音量键</title><link>https://blog.dongjiawang.top/post/2017-09-29-volume-touch-notification/</link><pubDate>Fri, 29 Sep 2017 23:05:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2017-09-29-volume-touch-notification/</guid><description>在自定义视频播放的音量和亮度的提示框的的时候只是能替换手势调出来的 view 这篇文章是用监听通知的方式监听音量键的操作 添加通知监听 1 2 3 4 5 6 7 NSError *error;</description></item><item><title>自定义音量提示 view</title><link>https://blog.dongjiawang.top/post/2017-09-26-mpvolumeview/</link><pubDate>Tue, 26 Sep 2017 12:00:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2017-09-26-mpvolumeview/</guid><description>AVFoundation 框架提供了播放音频和视频的工具，使用 AVFoundation 基本能满足我们的大部分的播放需求。 AVPlayer 提供了音量调节的功能，但是 这种调节属于 APP 级别的控制，是独立于系统</description></item><item><title>使用AVAudioPlayer产生__cxa_throw异常</title><link>https://blog.dongjiawang.top/post/2017-09-20-__cxa_throw/</link><pubDate>Wed, 20 Sep 2017 18:00:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2017-09-20-__cxa_throw/</guid><description>最近使用 AVAudioPlayer 的时候遇到一个很麻烦的事情，就是每次播放视频的时候，都会被这个异常卡住 libc++abi.dylib`__cxa_throw: 原因是在 Xcode 中设置了 异常断点 于是每次播放就会卡在这里几次 其实</description></item><item><title>iOS 利用宏判断系统版本</title><link>https://blog.dongjiawang.top/post/2017-09-15-version-define/</link><pubDate>Fri, 15 Sep 2017 13:00:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2017-09-15-version-define/</guid><description>一般判断系统版本都时候，都会这么写 1 #define SysVersion [[UIDevice currentDevice] systemVersion].floatValue 其实系统已经定义了很多类似的宏，不需要我们去再次定义 就在这个路径下 (__IPHONE_OS_VERSION_MAX_ALLOWED 这个定义是在Simulat</description></item><item><title>Fastlane自动化发布</title><link>https://blog.dongjiawang.top/post/2017-09-13-fastlane/</link><pubDate>Wed, 13 Sep 2017 12:00:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2017-09-13-fastlane/</guid><description>配置这篇文章阅读更好《配置fastlane环境》 平时开发新功能的时候，需要经常提交测试包到fir，然后给测试人员安装，每次发布都得更改配置、</description></item><item><title>iOS webView 打开 TXT 文件乱码的问题</title><link>https://blog.dongjiawang.top/post/2017-09-12-webview-open-txt/</link><pubDate>Tue, 12 Sep 2017 22:34:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2017-09-12-webview-open-txt/</guid><description>最近做资料文件下载下来并查看的时候，用 WKWebView 打开office 类型的文件的时候是没问题的，但是打开测试人员上传的一个 TXT 文件就出现了乱码问题，经过查</description></item><item><title>UITableView 滚动到底部 闪一下的问题</title><link>https://blog.dongjiawang.top/post/2017-07-31-uitableview-auto-bottom/</link><pubDate>Mon, 31 Jul 2017 17:10:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2017-07-31-uitableview-auto-bottom/</guid><description>最近做一个聊天对话的界面 使用 UItableView 做消息的界面，收到新消息的时候 tableivew 始终保持在最底部 一开始使用的是： 1 2 3 4 5 6 7 8 9 10 - (void)updateMessageTableView { dispatch_async(dispatch_get_main_queue(), ^{ [self.messageTableView reloadData]; NSIndexPath *indexPath = [NSIndexPath indexPathForRow:_messageArray.count -</description></item><item><title>去除 HTML 标签</title><link>https://blog.dongjiawang.top/post/2017-07-31-remove-htmlstr/</link><pubDate>Mon, 31 Jul 2017 15:50:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2017-07-31-remove-htmlstr/</guid><description>###这个方法可以很简单的去掉 HTML 的标签 1 2 3 4 5 6 7 8 9 10 11 12 // 去掉 HTML 标签 -(NSString *)filterHTML:(NSString *)html { NSScanner * scanner = [NSScanner scannerWithString:html]; NSString * text = nil; while([scanner isAtEnd]==NO) { [scanner scanUpToString:@&amp;#34;&amp;lt;&amp;#34; intoString:nil]; [scanner scanUpToString:@&amp;#34;&amp;gt;&amp;#34; intoString:&amp;amp;text]; html = [html stringByReplacingOccurrencesOfString:[NSString stringWithFormat:@&amp;#34;%@&amp;gt;&amp;#34;,text] withString:@&amp;#34;&amp;#34;]; } return html;</description></item><item><title>NSDictionary 转成 json</title><link>https://blog.dongjiawang.top/post/2017-07-31-nsdictory-json/</link><pubDate>Mon, 31 Jul 2017 15:30:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2017-07-31-nsdictory-json/</guid><description>iOS 自带框架中有将字典转成标准 json 的方法 比如我有一个字典 1 2 3 4 5 6 7 8 { from = dongjiawang; &amp;#34;img_url&amp;#34; = &amp;#34;http://content.uat.qixuetang.cn//img/user/1/1/132--911404.&amp;#34;; messagetime = &amp;#34;1.50149e+12&amp;#34;; msg = &amp;#34;测试对话&amp;#34;; &amp;#34;nick_name&amp;#34; = &amp;#34; test001&amp;#34;; type = text; } 用</description></item><item><title>横向滚动标题栏</title><link>https://blog.dongjiawang.top/post/2017-05-16-scrolllabel/</link><pubDate>Tue, 16 May 2017 15:30:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2017-05-16-scrolllabel/</guid><description>做了一个横向滚动的标题栏，用于标题文字过长的时候展示整个标题 GitHub 的 demo 大概的原理就是 一个UILabel做主展示label，一个label作为辅助</description></item><item><title>循环滚动展示 label</title><link>https://blog.dongjiawang.top/post/2017-05-05-cyclelabel/</link><pubDate>Fri, 05 May 2017 17:30:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2017-05-05-cyclelabel/</guid><description>业务需要做了一个上下滚动展示的文字广告位，类似轮播图的效果 Github 上的 Demo 用两个UILabel循环滚动，在UIView动画执行完成后，设置 frame</description></item><item><title>masonry 使用 UIView 的动画</title><link>https://blog.dongjiawang.top/post/2017-04-14-masonry-animation/</link><pubDate>Fri, 14 Apr 2017 17:00:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2017-04-14-masonry-animation/</guid><description>在创建一个 view 的时候，给这个 view 一个从下弹出的动画，以前使用 frame 做布局的时候，很简单的就用 UIViewAnimation 就做出来了，可是现在APP 布局用的是 masonry，直</description></item><item><title>关闭 textField、textView 的键盘联想和拼写检查</title><link>https://blog.dongjiawang.top/post/2017-03-27-textfield-keyboard/</link><pubDate>Mon, 27 Mar 2017 16:00:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2017-03-27-textfield-keyboard/</guid><description>1 2 3 self.textField.autocorrectionType = UITextAutocorrectionTypeNo; // 关闭键盘联想 self.textField.spellCheckingType = UITextSpellCheckingTypeNo;// 禁用拼写检查 对应的设置选项： 1 2 3 4 5 typedef NS_ENUM(NSInteger, UITextAutocorrectionType) { UITextAutocorrectionTypeDefault, //默认 UITextAutocorrectionTypeNo, //不自动纠错 UITextAutocorrectionTypeYes, //自动纠错 }; 1 2 3 4 5 typedef NS_ENUM(NSInteger, UITextSpellCheckingType) { UITextSpellCheckingTypeDefault,</description></item><item><title>Xcode8 使用 CoreData 创建 NSManageObject subclass</title><link>https://blog.dongjiawang.top/post/2017-03-21-coredata-nsmanageobjectsubclass/</link><pubDate>Tue, 21 Mar 2017 15:00:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2017-03-21-coredata-nsmanageobjectsubclass/</guid><description>升级 Xcode8 以上后，在使用 coreData 的时候发现新建的文件里找不到 NSManageObject subclass 了，如图， 解决这个问题很简单。 首先，选中你的 xcdatamodeld 文件 点击上方 Editor，选择 Create NSManagedObject Sub</description></item><item><title>UICollectionView 添加类似 tableHeaderView</title><link>https://blog.dongjiawang.top/post/2017-03-18-uicollectionview-tableheaderview/</link><pubDate>Sat, 18 Mar 2017 17:38:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2017-03-18-uicollectionview-tableheaderview/</guid><description>新项目的首页有个需求，就是在 collectionView 的顶部添加可以滚动的 banner 和几个点击按钮，而且 collectionView 的显示还是有多个 section，所以 collectionView 自己的注册 headView 的方式肯定是不能</description></item><item><title>UITableView 的 selectRowAtIndexPath 被 UITapGestureRecognizer 的问题</title><link>https://blog.dongjiawang.top/post/2016-12-27-recognizer-get-tableview-selectedcell/</link><pubDate>Tue, 27 Dec 2016 16:38:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2016-12-27-recognizer-get-tableview-selectedcell/</guid><description>今天在控制器的 view 上添加了一个 UITapGestureRecognizer 手势来处理一些功能 1 2 3 UITapGestureRecognizer *tap = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(endTextfieldEditing)]; tap.delegate = self; [self.view addGestureRecognizer:tap]; 但是这时候点击 tableView 的 cell 的时候不会跳转了，是点击手势截获了tabl</description></item><item><title>UIColor 转成 Hex 16进制色值</title><link>https://blog.dongjiawang.top/post/2016-12-22-uicolortohexstring/</link><pubDate>Thu, 22 Dec 2016 14:36:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2016-12-22-uicolortohexstring/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 - (NSString *)hexStringFromColor:(UIColor *)color { const CGFloat *components = CGColorGetComponents(color.CGColor); CGFloat r = components[0]; CGFloat g = components[1]; CGFloat b = components[2]; return [NSString stringWithFormat:@&amp;#34;#%02lX%02lX%02lX&amp;#34;, lroundf(r * 255), lroundf(g * 255), lroundf(b * 255)]; }</description></item><item><title>删除可变数组元素</title><link>https://blog.dongjiawang.top/post/2016-12-15-nsmutablearray-delete/</link><pubDate>Thu, 15 Dec 2016 12:07:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2016-12-15-nsmutablearray-delete/</guid><description>平时使用 NSMutableArray 中经常用到遍历删除数组元素的问题。 一般第一个想法是使用一下 forin 就解决了，但是老司机都会知道使用 forin 做删除操作的时候会 crash。 报错的</description></item><item><title>NSString占用的高度和范围</title><link>https://blog.dongjiawang.top/post/2016-12-07-string-widthheight/</link><pubDate>Wed, 07 Dec 2016 11:46:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2016-12-07-string-widthheight/</guid><description>1 NSString *string = @&amp;#34;现在想来，我们这波第一批老去的90后还是挺幸运的。在我们最好的年龄遇到了最好的华语乐坛（周杰伦巅峰 林俊杰 SHE 潘玮柏 蔡依林…</description></item><item><title>通过顶部状态栏获取当前的网络状态</title><link>https://blog.dongjiawang.top/post/2016-11-19-statusbarnetstatus/</link><pubDate>Sat, 19 Nov 2016 23:50:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2016-11-19-statusbarnetstatus/</guid><description>通过顶部状态栏获取当前的网络状态 定义网络状态枚举 1 2 3 4 5 6 7 typedef enum : NSUInteger { NetworkStatusUnkown, NetworkStatus2G, NetworkStatus3G, NetworkStatus4G, NetWorkStatusWiFi, } Networkstatus; 获取状态栏上的网络图标 参考这篇 iOS 状态栏的图标 获取当前的</description></item><item><title>iOS 状态栏的图标</title><link>https://blog.dongjiawang.top/post/2016-11-19-statusbar/</link><pubDate>Sat, 19 Nov 2016 23:02:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2016-11-19-statusbar/</guid><description>获取状态栏上的 view 数组 1 2 3 4 UIApplication *app = [UIApplication sharedApplication]; // 获取状态栏 UIView *statusView = [app valueForKey:@&amp;#34;statusBar&amp;#34;]; NSArray *subViews = [[statusView valueForKey:@&amp;#34;foregroundView&amp;#34;] subviews]; 打印 subviews 就能看到状态栏上的图标数据 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 // 信</description></item><item><title>模仿今日头条（网易新闻）的滚动</title><link>https://blog.dongjiawang.top/post/2016-11-14-jwscrollpageview/</link><pubDate>Mon, 14 Nov 2016 10:11:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2016-11-14-jwscrollpageview/</guid><description>JWScrollPageView GitHub 地址 JWTagStyle 标签样式的类， 是否滚动条、是否遮盖、缩放，文字颜色等等 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38</description></item><item><title>遍历字典 NSDictionary</title><link>https://blog.dongjiawang.top/post/2016-11-08-nsdictionary-enum/</link><pubDate>Tue, 08 Nov 2016 11:00:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2016-11-08-nsdictionary-enum/</guid><description>遍历字典内容的方式一般有两种 enumerateKeysAndObjectsUsingBlock 、enumerateObjectsWithOptions enumerateObjectsWithOptions 可以设置遍历的类型： NSEnumerationConcurrent = (1UL &amp;laquo; 0), // 并发模式 NSEnumerationReverse = (1UL &amp;laquo; 1), /</description></item><item><title>UICollectionView的常用方法和属性</title><link>https://blog.dongjiawang.top/post/2016-11-06-uicollectionabout/</link><pubDate>Sun, 06 Nov 2016 21:35:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2016-11-06-uicollectionabout/</guid><description>简单的创建和使用 collectionview 请看我的另一片文章，UICollectionView的简单使用 下面是 UICollectionView 的常用方法和属性，或许可以通过详细阅读开发者文档从而</description></item><item><title>使用 Reachability 监听网络状态</title><link>https://blog.dongjiawang.top/post/2016-11-02-netstatus/</link><pubDate>Wed, 02 Nov 2016 17:47:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2016-11-02-netstatus/</guid><description>为了适配 ipv6 ，原来使用的监听是 AFN 自带的，不知道为什么在 ipv6 下监听容易出现延迟甚至获取状态错误，于是使用 Reachability 这个框架 为了让 APP 在运行中一直监听，需要给</description></item><item><title>提交审核报错：No .app bundles found in the package</title><link>https://blog.dongjiawang.top/post/2016-10-18-xcodeerror/</link><pubDate>Tue, 18 Oct 2016 16:29:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2016-10-18-xcodeerror/</guid><description>昨天把系统升级到了10.12，今天准备提交一个版本APP进行审核，Xcode版本是 8.0，结果老是报错，重新打包多次无效。 后来发现用Xcod</description></item><item><title>Swift 使用JSON数据结构</title><link>https://blog.dongjiawang.top/post/2016-09-19-swift-json/</link><pubDate>Mon, 19 Sep 2016 23:25:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2016-09-19-swift-json/</guid><description>如果你的APP从服务器获取到的数据格式为JSON。你可以使用JSONSerialization把JSON解析成Swift的数据类型，比如Di</description></item><item><title>获取当前的年、月、日、小时、分钟、秒</title><link>https://blog.dongjiawang.top/post/2016-09-08-getdate/</link><pubDate>Thu, 08 Sep 2016 13:06:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2016-09-08-getdate/</guid><description>获取当前的date 1 NSDate *nowDate = [NSDate date]; 使用NSCalendar 计算详细的时间 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 NSCalendar *calendar = [NSCalendar currentCalendar]; NSUInteger unitFlags = NSYearCalendarUnit | //年 NSMonthCalendarUnit | //月份 NSDayCalendarUnit |</description></item><item><title>判断图片的类型</title><link>https://blog.dongjiawang.top/post/2016-08-23-imagetype/</link><pubDate>Tue, 23 Aug 2016 10:39:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2016-08-23-imagetype/</guid><description>从网络获取的图片URL. 举例如下: 1 2 3 4 5 6 7 8 9 //假设这是一个网络获取的URL NSString *path = @&amp;#34;http://pic3.nipic.com/20090709/2893198_075124038_2.png&amp;#34;; // 判断是否为png NSString *extensionName = path.pathExtension; if ([extensionName.lowercaseString isEqualToString:@&amp;#34;png&amp;#34;]) { //是png图</description></item><item><title>NSString使用stringWithFormat的拼接</title><link>https://blog.dongjiawang.top/post/2016-08-22-stringformat/</link><pubDate>Mon, 22 Aug 2016 10:27:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2016-08-22-stringformat/</guid><description>保留2位小数点 1 2 3 //.2代表小数点后面保留2位(2代表保留的数量) NSString *string = [NSString stringWithFormat:@&amp;#34;%.2f&amp;#34;,M_PI]; //输出结果是: 3.14 用0补全的方法 1 2 3 4 NSInteger count = 5; //02代表</description></item><item><title>WKWebView添加Cookie</title><link>https://blog.dongjiawang.top/post/2016-08-16-cookie/</link><pubDate>Tue, 16 Aug 2016 16:04:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2016-08-16-cookie/</guid><description>获取 Cookie 之前，APP 已经与服务器交互过，已经存在 Cookie 才行 网络请求添加Cookie都需要在request的时候添加 1 2 3 4 5 6 7 8 9 10 11 12 13 //获</description></item><item><title>WKWebView的使用</title><link>https://blog.dongjiawang.top/post/2016-08-12-wkwebview/</link><pubDate>Fri, 12 Aug 2016 16:35:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2016-08-12-wkwebview/</guid><description>WKWebView是iOS8开始增加的浏览视图 #新特性 性能高，稳定性好，占用的内存比较小 支持JS交互 支持HTML5 新特性 可以添加进度条 支持内</description></item><item><title>使用原生API扫描二维码</title><link>https://blog.dongjiawang.top/post/2016-08-09-qrcode/</link><pubDate>Tue, 09 Aug 2016 17:37:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2016-08-09-qrcode/</guid><description>添加需要的代理 1 &amp;lt;AVCaptureMetadataOutputObjectsDelegate,UIAlertViewDelegate&amp;gt; 定义对象 1 2 3 4 //输入输出数据链 @property (nonatomic, strong) AVCaptureSession *session; //是否读取数据 @property (nonatomic, assign) BOOL *readingCode; 初始化 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23</description></item><item><title>可以放大、缩小、滑动的imageView</title><link>https://blog.dongjiawang.top/post/2016-08-09-scrollimage/</link><pubDate>Tue, 09 Aug 2016 10:54:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2016-08-09-scrollimage/</guid><description>示例图片## 代码## 1 2 3 4 //底部srollView @property (nonatomic, strong) UIScrollView *imgScroll; //显示图片 @property (nonatomic, strong) UIImageView *myImageView; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 -(UIScrollView *)imgScroll { if (!_imgScroll) { _imgScroll = [[UIScrollView alloc] initWithFrame:self.view.bounds]; _imgScroll.delegate =</description></item><item><title>UITableView侧滑删除</title><link>https://blog.dongjiawang.top/post/2016-08-02-tableview/</link><pubDate>Tue, 02 Aug 2016 14:34:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2016-08-02-tableview/</guid><description>UITableView的代理方法中已经集成了侧滑删除的功能，只要实现以下的方法就能增加侧滑删除 1 2 3 4 //先要设Cell可编辑 - (BOOL)tableView:(UITableView *)tableView canEditRowAtIndexPath:(NSIndexPath *)indexPath { return</description></item><item><title>崩溃异常捕获</title><link>https://blog.dongjiawang.top/post/2016-07-21-geterror/</link><pubDate>Thu, 21 Jul 2016 15:37:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2016-07-21-geterror/</guid><description>iOS已经提供了捕获异常的机制 NSSetUncaughtExceptionHandler 我们就创建一个捕获crash的类，其中写好分析崩溃原因的方法 头文件 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 #import &amp;lt;UIKit/UIKit.h&amp;gt; @interface UncaughtExceptionHandler</description></item><item><title>大文件断点续传</title><link>https://blog.dongjiawang.top/post/2016-07-18-downloadbig/</link><pubDate>Mon, 18 Jul 2016 17:56:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2016-07-18-downloadbig/</guid><description>定义 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 @interface FileDownloadManager ()&amp;lt;NSURLSessionDataDelegate&amp;gt; /** * 下载任务 */ @property (nonatomic, strong) NSURLSessionDataTask *downloadTask; /** * session */ @property (nonatomic, strong) NSURLSession *session; /** * 下载对象流 */ @property (nonatomic, strong) NSOutputStream *stream; /** * 文件总长度 */ @property</description></item><item><title>使用AFN提交头像</title><link>https://blog.dongjiawang.top/post/2016-07-13-iconupload/</link><pubDate>Wed, 13 Jul 2016 17:11:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2016-07-13-iconupload/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 //服务器地址 NSString *url = [NSString stringWithFormat:@&amp;#34;%@/uploadfile&amp;#34;,[GlobalData GetInstance].GB_ServerIP]; //请求的字典信息（用户的</description></item><item><title>AFN监听网络状态</title><link>https://blog.dongjiawang.top/post/2016-07-13-afnnetstatus/</link><pubDate>Wed, 13 Jul 2016 10:25:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2016-07-13-afnnetstatus/</guid><description>在 1 - (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions 中添加以下代码就可以了 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 // 监测网络情况 [[AFNetworkReachabilityManager sharedManager] setReachabilityStatusChangeBlock:^(AFNetworkReachabilityStatus status) { switch (status) { case AFNetworkReachabilityStatusNotReachable: //没有网络 break; case AFNetworkReachabilityStatusReachableViaWWAN: //使用的数据</description></item><item><title>iOS 关闭自动锁屏</title><link>https://blog.dongjiawang.top/post/2016-07-08-ios-devices/</link><pubDate>Fri, 08 Jul 2016 11:32:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2016-07-08-ios-devices/</guid><description>关闭自动锁屏 1 [UIApplication sharedApplication].idleTimerDisabled = YES; 关闭距离感应（防止黑屏） 1 2 [UIDevice currentDevice].proximityMonitoringEnabled = NO; // 不允许临近检测 写项目的时候一进入视频播放界面就会被手指挡住距离感应黑屏了，试了好</description></item><item><title>iOS 手势基本操作</title><link>https://blog.dongjiawang.top/post/2016-07-07-touch-event/</link><pubDate>Thu, 07 Jul 2016 00:15:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2016-07-07-touch-event/</guid><description>1、UIGestureRecognizer 介绍 手势识别在 iOS 中非常重要，他极大地提高了移动设备的使用便捷性。 iOS 系统在 3.2 以后，他提供了一些常用的</description></item><item><title>iOS 横竖屏幕</title><link>https://blog.dongjiawang.top/post/2016-04-22-ios-screen/</link><pubDate>Fri, 22 Apr 2016 10:06:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2016-04-22-ios-screen/</guid><description>首先，确保APP支持屏幕旋转，具体怎么支持，去网上查询一下 然后，在对应的类中进行如下操作 1 2 3 4 5 6 7 8 9 10 #pragma mark 转屏方法重写 -(UIInterfaceOrientationMask)supportedInterfaceOrientations { return [self.viewControllers.lastObject supportedInterfaceOrientations]; } - (UIInterfaceOrientation)preferredInterfaceOrientationForPresentation</description></item><item><title>UIView设置少于四个的圆角</title><link>https://blog.dongjiawang.top/post/2016-04-21-viewcorner/</link><pubDate>Thu, 21 Apr 2016 10:34:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2016-04-21-viewcorner/</guid><description>最近的需求中有个label需要设置右下角为圆角，其余三个为直角，一开始用的是重写drawRect，然后用绘图重绘每个角的样子，计算起来还是麻</description></item><item><title>图片设置圆角的三种方法</title><link>https://blog.dongjiawang.top/post/2016-03-15-imageviewcorner/</link><pubDate>Tue, 15 Mar 2016 22:42:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2016-03-15-imageviewcorner/</guid><description>一般我们在iOS开发的过程中设置圆角都是如下这样设置的。 第一种 1 2 imageView.clipsToBounds = YES; [imageView.layer setCornerRadius:50]; 这样设置会触发离屏渲染，比较消耗性能。比如当一个页面上有十几头像</description></item><item><title>点击推送消息跳转处理</title><link>https://blog.dongjiawang.top/post/2016-02-27-notfication/</link><pubDate>Sat, 27 Feb 2016 20:25:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2016-02-27-notfication/</guid><description>当用户点击收到的推送消息时候，我希望打开APP，并且跳转到对应的界面，这就需要在AppDelegate里面对代理方法进行处理。 当用户点击推送</description></item><item><title>NSLog设置不打印</title><link>https://blog.dongjiawang.top/post/2016-01-12-nslog/</link><pubDate>Tue, 12 Jan 2016 10:25:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2016-01-12-nslog/</guid><description>在调试应用程序的时候经常需要进行打印需要的信息，但是当打印的地方多了之后在真机上跑应用程序就会相应的慢很多，输出语句多了之后会在很大程序上影</description></item><item><title>UILabel 的使用，属性详解</title><link>https://blog.dongjiawang.top/post/2016-01-10-uilabel/</link><pubDate>Sun, 10 Jan 2016 15:25:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2016-01-10-uilabel/</guid><description>UILable是iPhone界面最基本的控件，主要用来显示文本信息。 常用属性和方法有： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27</description></item><item><title>屏幕截图的方法</title><link>https://blog.dongjiawang.top/post/2016-01-10-camreascreen/</link><pubDate>Sun, 10 Jan 2016 10:25:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2016-01-10-camreascreen/</guid><description>不用 2d截图 直接截图 1 2 3 4 5 6 7 8 - (UIImage *)screenShots { //截取整个backview UIGraphicsBeginImageContext(self.backgroundView.bounds.size); [self.backgroundView.layer renderInContext:UIGraphicsGetCurrentContext()]; UIImage *sourceImage = UIGraphicsGetImageFromCurrentImageContext(); UIGraphicsEndImageContext(); return sourceImage; } 上面的方法会压缩图片，用下面的方法可以设置是否</description></item><item><title>自定义UIView动画效果</title><link>https://blog.dongjiawang.top/post/2016-01-06-viewanimation/</link><pubDate>Wed, 06 Jan 2016 18:25:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2016-01-06-viewanimation/</guid><description>最普通动画: 1 2 3 4 5 6 7 8 9 //开始动画 [UIView beginAnimations:nil context:nil]; //设定动画持续时间 [UIView setAnimationDuration:2]; //动画的内容 frame.origin.x += 150; [img setFrame:frame]; //动画结束 [UIView commitAnimations]; 连续动画:一个接一个地显示一</description></item><item><title>iOS 获取UILabel上最后一个字符串的位置。获取文字长度和高度，自动换行</title><link>https://blog.dongjiawang.top/post/2016-01-06-labelstring/</link><pubDate>Wed, 06 Jan 2016 16:50:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2016-01-06-labelstring/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 //行的高度。 -(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath { NewNotificationCell *cell = (NewNotificationCell *)[self tableView:tableView cellForRowAtIndexPath:indexPath]; cell.myLabel.text = [self.dataArray objectAtIndex:indexPath.row]; labelSize = [cell.myLabel.text sizeWithFont:[UIFont fontWithName:@&amp;#34;Arial&amp;#34; size:15] constrainedToSize:CGSizeMake(cell.myLabel.frame.size.width, 1000) lineBreakMode:UILineBreakModeWordWrap]; cell.myLabel.lineBreakMode = UILineBreakModeWordWrap; cell.myLabel.numberOfLines = 0; [cell.myLabel setFont:[UIFont fontWithName:@&amp;#34;Arial&amp;#34; size:15]]; cell.myLabel.frame = CGRectMake(0, 0, labelSize.width, labelSize.height); return labelSize.height+30; } 1 2 3 4 5 6 7</description></item><item><title>给函数和变量取个合适的名字</title><link>https://blog.dongjiawang.top/post/2016-01-06-voidname/</link><pubDate>Wed, 06 Jan 2016 16:25:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2016-01-06-voidname/</guid><description>1、明确函数要做什么 在给函数命名前，明确函数到底要做什么。这有利于给函数命名。 2、以动词开头 函数总是做些什么，所以当然要以动词开头。 3、尽量</description></item><item><title>NSString字符串的截取</title><link>https://blog.dongjiawang.top/post/2016-01-06-nsstring/</link><pubDate>Wed, 06 Jan 2016 15:54:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2016-01-06-nsstring/</guid><description>NSString类中提供了这样三个方法用于获取子字符串： substringFromIndex: substringWithRange: substringToIndex: 具体的使用见下面代码即可知道。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24</description></item><item><title>UIScrollView的基本使用</title><link>https://blog.dongjiawang.top/post/2015-12-30-ios-scrollview-basic/</link><pubDate>Wed, 30 Dec 2015 15:56:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2015-12-30-ios-scrollview-basic/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 scrollView = [[UIScrollView alloc] initWithFrame:CGRectMake(0, 0, 320, 460)]; scrollView.backgroundColor = [UIColor redColor]; // 是否支持滑动最顶端 scrollView.scrollsToTop = NO; scrollView.delegate = self; // 设置内容大小 scrollView.contentSize = CGSizeMake(320, 460*10); // 是否反弹 scrollView.bounces =</description></item><item><title>UICollectionView的简单使用和常用代理方法</title><link>https://blog.dongjiawang.top/post/2015-12-30-ios-collectionview-basic/</link><pubDate>Wed, 30 Dec 2015 15:34:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2015-12-30-ios-collectionview-basic/</guid><description>UICollectionView 相对于 UITableView 有更加自由的布局，做出的界面可变性更大最近开始接触使用 UICollectionView ，整理了一下常用的代理方法。 首先需要先添加UICollectionView</description></item><item><title>富文本的简单使用</title><link>https://blog.dongjiawang.top/post/2015-12-30-attributedstring/</link><pubDate>Wed, 30 Dec 2015 15:00:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2015-12-30-attributedstring/</guid><description>常常会有一段文字显示不同的颜色和字体，或者给某几个文字加删除线或下划线的需求。 使用富文本 NSMuttableAttstring（带属性的字符</description></item><item><title>计算当前时间和指定时间的时间差</title><link>https://blog.dongjiawang.top/post/2015-12-30-time-differentcount/</link><pubDate>Wed, 30 Dec 2015 14:50:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2015-12-30-time-differentcount/</guid><description>** 这段代码计算出了相差几天** 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 /** * 计算剩余时间 * * @param endTime 结束日期 * * @return 剩余时间 */ -(NSString *)getCountDownStringWithEndTime:(NSString *)endTime { NSDateFormatter</description></item><item><title>计算时间间隔(年月日)</title><link>https://blog.dongjiawang.top/post/2015-12-28-time-datestr/</link><pubDate>Mon, 28 Dec 2015 13:55:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2015-12-28-time-datestr/</guid><description>1 2 3 4 5 6 //创建时间格式 NSDateFormatter *dateFormatter = [[NSDateFormatter alloc] init]; [dateFormatter setDateFormat:@&amp;#34;yyyy-MM-dd HH:mm&amp;#34;]; NSDate *startDate = [dateFormatter dateFromString:@&amp;#34;2015-12-20 14:00&amp;#34;]; NSDate *endDate = [dateFormatter dateFromString:@&amp;#34;2015-12-21 14:00&amp;#34;]; NSTimeInterval time = [endDate timeIntervalSinceDate:startDate]; 1 2 3 4 5 6 7 8 9 10 11 12 13 //显示时间间隔 int minute,second,hour,day; second=time%60; minute = (time/60)%60; hour = (time/3600)%24;</description></item><item><title>iOS 9以上系统 信任的企业级开发者证书</title><link>https://blog.dongjiawang.top/post/2015-12-22-ios9-certificate/</link><pubDate>Tue, 22 Dec 2015 10:36:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2015-12-22-ios9-certificate/</guid><description>系统升级iOS9之后，安装企业签名的app时，会提示“未受信任的企业级开发者” 解决方法为： 设置-通用-描述文件-点上去，找到相应目录，点击后</description></item><item><title>防止输入时键盘覆盖掉输入框</title><link>https://blog.dongjiawang.top/post/2015-12-18-textfield-keyboard/</link><pubDate>Fri, 18 Dec 2015 16:11:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2015-12-18-textfield-keyboard/</guid><description>添加监听者 1 [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardwasChange:) name:UIKeyboardWillChangeFrameNotification object:nil]; 监听键盘之后的操作 可以根据自己的需要调整高度的大小 1 2 3 4 5 6 7 - (void)keyboardwasChange:(NSNotification *)info { CGRect keyFrame = [info.userInfo[UIKeyboardFrameEndUserInfoKey] CGRectValue]; CGFloat tY = keyFrame.origin.y - self.view.frame.size.height - 64; self.view.transform = CGAffineTransformMakeTranslation(0, tY); }</description></item><item><title>iOS APP设计规范大全</title><link>https://blog.dongjiawang.top/post/2015-12-18.app/</link><pubDate>Fri, 18 Dec 2015 11:31:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2015-12-18.app/</guid><description>#大图可保存到本地#</description></item><item><title>通知的添加和移除</title><link>https://blog.dongjiawang.top/post/2015-12-18-notification/</link><pubDate>Fri, 18 Dec 2015 11:09:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2015-12-18-notification/</guid><description>我们都知道 viewWillAppear: 方法是在控制器的view将要显示的时候调用的，而 viewWillDisappear: 方法是在控制器的view将要隐藏的时候调用。很多时候我们根据自身需要将相关代码</description></item><item><title>应用之间的跳转与数据传递</title><link>https://blog.dongjiawang.top/post/2015-12-17-appjump/</link><pubDate>Thu, 17 Dec 2015 17:12:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2015-12-17-appjump/</guid><description>在开发的时候遇到需要从其他APP调用自己的APP的需求，比如从Safari中打开APP，并且传递一些信息的需要 1、首先设置自己的 URL types 打开项目</description></item><item><title>开发时候使用到的工具资源</title><link>https://blog.dongjiawang.top/post/2015-12-15-tools/</link><pubDate>Tue, 15 Dec 2015 09:38:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2015-12-15-tools/</guid><description>#图片处理 压缩图片 ImageOptim（Mac客户端，免费），支持 PNG/JPEG/GIF 动画，压缩后图像质量不变，体积更小载入更快。 下载地址 密码： c97a 制作GIF动</description></item><item><title>Xcode后插件不能使用的问题</title><link>https://blog.dongjiawang.top/post/2015-12-11-xcodeuse/</link><pubDate>Fri, 11 Dec 2015 14:11:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2015-12-11-xcodeuse/</guid><description>从Xcode 5开始，苹果要求加入UUID证书从而保证插件的稳定性。因此Xcode版本更新之后需要在插件的 Info.plist 文件中添加当前Xcode的 UUID 。 具体</description></item><item><title>如何跳转到各个系统设置界面</title><link>https://blog.dongjiawang.top/post/2015-12-11-ios-setting/</link><pubDate>Fri, 11 Dec 2015 14:11:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2015-12-11-ios-setting/</guid><description>APP需要用到的权限有时候没有打开，就需要提示用户打开某项权限，最好是直接引导用户跳转到对应的设置界面。下面是一些直接跳转到设置界面的方法。</description></item><item><title>使用百度地图进行定位和路线规划</title><link>https://blog.dongjiawang.top/post/2015-11-27-baidumapsdk/</link><pubDate>Fri, 27 Nov 2015 16:19:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2015-11-27-baidumapsdk/</guid><description>先去百度地图开发者中心申请APPkey：百度开发者中心 ，下载百度地图的SDK。 导入SDK的framework文件，BaiduMapAPI_B</description></item><item><title>使用SQLCipher加密数据库</title><link>https://blog.dongjiawang.top/post/2015-11-13-sqlcipher/</link><pubDate>Fri, 13 Nov 2015 16:59:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2015-11-13-sqlcipher/</guid><description>Xcode中集成了免费的sqlite，但是不提供加密的模块，突然有一天，蛋疼的客户要求把数据进行加密，于是乎就寻找使用简单并且可以把数据迁移</description></item><item><title>二进制和资源包的自检</title><link>https://blog.dongjiawang.top/post/2015-11-13-encrypt/</link><pubDate>Fri, 13 Nov 2015 11:32:00 +0000</pubDate><guid>https://blog.dongjiawang.top/post/2015-11-13-encrypt/</guid><description>因为现在做的是企业版的APP，不能保证用户不越狱，也不能保证有些用户喜欢自己修改ipa包里的资源文件，比如更换一些资源图片。因此，我们有必要</description></item></channel></rss>